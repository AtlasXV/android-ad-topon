plugins {
    id "org.sonarqube" version "3.0"
    id "io.gitlab.arturbosch.detekt" version "1.13.1"
}
apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'maven-publish'

android {
    namespace 'com.android.atlasv.topon'
    compileSdkVersion 33

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 31
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

sonarqube {
    properties {
        property "sonar.host.url", "https://sonar.netspeedtestmaster.cn"
        property "sonar.login", "${System.getenv("SONAR_TOKEN")}"
        property "sonar.kotlin.detekt.reportPaths", "reports/detekt-results.xml"

    }
}

detekt {
    reports {
        xml {
            enabled = true
            destination = file("reports/detekt-results.xml")
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.startup:startup-runtime:1.1.1'
    implementation 'com.atlasv.android:ad-framework-gz:2.1.9'
    implementation "com.github.bumptech.glide:glide:4.13.0"

    //Anythink (Necessary)
    api "com.anythink.sdk:core:6.1.55"
    api "com.anythink.sdk:nativead:6.1.55"
    api "com.anythink.sdk:banner:6.1.55"
    api "com.anythink.sdk:interstitial:6.1.55"
    api "com.anythink.sdk:rewardedvideo:6.1.55"
    api "com.anythink.sdk:splash:6.1.55"

    //Androidx (Necessary)
    api "androidx.appcompat:appcompat:1.1.0"
    api "androidx.browser:browser:1.0.0"

    //Vungle
    api "com.anythink.sdk:adapter-vungle:6.1.55"
    api "com.vungle:publisher-sdk-android:6.12.0"
    api "androidx.core:core:1.3.2"
    api "androidx.localbroadcastmanager:localbroadcastmanager:1.0.0"
    api "com.google.android.gms:play-services-basement:17.5.0"
    api "com.google.android.gms:play-services-ads-identifier:17.0.0"

    //Pangle
    api "com.anythink.sdk:adapter-pangle-nonchina:6.1.55"
    api "com.pangle.global:ads-sdk:4.8.0.8"
    api "com.google.android.gms:play-services-ads-identifier:17.0.0"

    //Facebook
    api "com.anythink.sdk:adapter-facebook:6.1.55"
    api "com.facebook.android:audience-network-sdk:6.12.0"
    api "androidx.annotation:annotation:1.0.0"

    //Admob
    api "com.anythink.sdk:adapter-admob:6.1.55"
    api "com.google.android.gms:play-services-ads:21.3.0"

    //Inmobi
    api "com.anythink.sdk:adapter-inmobi:6.1.55.1"
    api "com.inmobi.monetization:inmobi-ads:10.1.2"
    api "com.squareup.picasso:picasso:2.71828"
    api "androidx.browser:browser:1.3.0"
    api "androidx.recyclerview:recyclerview:1.1.0"
    api "com.google.android.gms:play-services-ads-identifier:17.0.0"

    //AppLovin
    api "com.anythink.sdk:adapter-applovin:6.1.55"
    api "com.applovin:applovin-sdk:11.5.5"

    //Mintegral
    def mintegralVc= "16.3.61"
    api "com.anythink.sdk:adapter-mintegral-nonchina:6.1.55"
    api "com.mbridge.msdk.oversea:reward:${mintegralVc}"
    api "com.mbridge.msdk.oversea:newinterstitial:${mintegralVc}"
    api "com.mbridge.msdk.oversea:mbnative:${mintegralVc}"
    api "com.mbridge.msdk.oversea:mbnativeadvanced:${mintegralVc}"
    api "com.mbridge.msdk.oversea:mbsplash:${mintegralVc}"
    api "com.mbridge.msdk.oversea:mbbanner:${mintegralVc}"
    api "com.mbridge.msdk.oversea:mbbid:${mintegralVc}"
    api "androidx.recyclerview:recyclerview:1.1.0"

    //Tramini
    api "com.anythink.sdk:tramini-plugin:6.1.55"
}

// build a jar with source files
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    archiveClassifier.set('sources')
}

task javadoc(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

// build a jar with javadoc
task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

afterEvaluate {
    publishing {
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                // Applies the component for the release build variant.
                from components.release
                artifact sourcesJar
                // You can then customize attributes of the publication as shown below.
                groupId 'com.atlasv.android'
                artifactId project.name + "-gz"
                version '1.0.4'
            }
        }

        repositories {
            maven {
                name = "GitHubPackages"
                url = uri("https://maven.pkg.github.com/AtlasXV/android-libs")
                credentials {
                    username = System.getenv("GPR_USR") ?: project.findProperty("GPR_USR")
                    password = System.getenv("GPR_KEY") ?: project.findProperty("GPR_KEY")
                }
            }
        }
    }
}
